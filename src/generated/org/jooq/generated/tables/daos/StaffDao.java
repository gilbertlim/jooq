/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.generated.tables.Staff_;
import org.jooq.generated.tables.pojos.Staff;
import org.jooq.generated.tables.records.StaffRecord;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffDao extends DAOImpl<StaffRecord, Staff, Long> {

    /**
     * Create a new StaffDao without any configuration
     */
    public StaffDao() {
        super(Staff_.STAFF, Staff.class);
    }

    /**
     * Create a new StaffDao with an attached configuration
     */
    public StaffDao(Configuration configuration) {
        super(Staff_.STAFF, Staff.class, configuration);
    }

    @Override
    public Long getId(Staff object) {
        return object.getStaffId();
    }

    /**
     * Fetch records that have <code>staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfStaffId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Staff_.STAFF.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staff_id IN (values)</code>
     */
    public List<Staff> fetchByStaffId_(Long... values) {
        return fetch(Staff_.STAFF.STAFF_ID, values);
    }

    /**
     * Fetch a unique record that has <code>staff_id = value</code>
     */
    public Staff fetchOneByStaffId_(Long value) {
        return fetchOne(Staff_.STAFF.STAFF_ID, value);
    }

    /**
     * Fetch a unique record that has <code>staff_id = value</code>
     */
    public Optional<Staff> fetchOptionalByStaffId_(Long value) {
        return fetchOptional(Staff_.STAFF.STAFF_ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfFirstName_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff_.STAFF.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<Staff> fetchByFirstName_(String... values) {
        return fetch(Staff_.STAFF.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfLastName_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff_.STAFF.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<Staff> fetchByLastName_(String... values) {
        return fetch(Staff_.STAFF.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfAddressId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Staff_.STAFF.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<Staff> fetchByAddressId_(Long... values) {
        return fetch(Staff_.STAFF.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>picture BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfPicture_(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Staff_.STAFF.PICTURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>picture IN (values)</code>
     */
    public List<Staff> fetchByPicture_(byte[]... values) {
        return fetch(Staff_.STAFF.PICTURE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfEmail_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff_.STAFF.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<Staff> fetchByEmail_(String... values) {
        return fetch(Staff_.STAFF.EMAIL, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfStoreId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Staff_.STAFF.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<Staff> fetchByStoreId_(Long... values) {
        return fetch(Staff_.STAFF.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfActive_(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Staff_.STAFF.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<Staff> fetchByActive_(Byte... values) {
        return fetch(Staff_.STAFF.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfUsername_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff_.STAFF.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<Staff> fetchByUsername_(String... values) {
        return fetch(Staff_.STAFF.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfPassword_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff_.STAFF.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<Staff> fetchByPassword_(String... values) {
        return fetch(Staff_.STAFF.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Staff> fetchRangeOfLastUpdate_(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Staff_.STAFF.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<Staff> fetchByLastUpdate_(LocalDateTime... values) {
        return fetch(Staff_.STAFF.LAST_UPDATE, values);
    }
}
