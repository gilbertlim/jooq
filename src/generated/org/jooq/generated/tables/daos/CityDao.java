/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.City_;
import org.jooq.generated.tables.pojos.City;
import org.jooq.generated.tables.records.CityRecord;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityDao extends DAOImpl<CityRecord, City, Long> {

    /**
     * Create a new CityDao without any configuration
     */
    public CityDao() {
        super(City_.CITY, City.class);
    }

    /**
     * Create a new CityDao with an attached configuration
     */
    public CityDao(Configuration configuration) {
        super(City_.CITY, City.class, configuration);
    }

    @Override
    public Long getId(City object) {
        return object.getCityId();
    }

    /**
     * Fetch records that have <code>city_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<City> fetchRangeOfCityId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(City_.CITY.CITY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city_id IN (values)</code>
     */
    public List<City> fetchByCityId_(Long... values) {
        return fetch(City_.CITY.CITY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>city_id = value</code>
     */
    public City fetchOneByCityId_(Long value) {
        return fetchOne(City_.CITY.CITY_ID, value);
    }

    /**
     * Fetch a unique record that has <code>city_id = value</code>
     */
    public Optional<City> fetchOptionalByCityId_(Long value) {
        return fetchOptional(City_.CITY.CITY_ID, value);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<City> fetchRangeOfCity_(String lowerInclusive, String upperInclusive) {
        return fetchRange(City_.CITY.CITY_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<City> fetchByCity_(String... values) {
        return fetch(City_.CITY.CITY_, values);
    }

    /**
     * Fetch records that have <code>country_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<City> fetchRangeOfCountryId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(City_.CITY.COUNTRY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country_id IN (values)</code>
     */
    public List<City> fetchByCountryId_(Long... values) {
        return fetch(City_.CITY.COUNTRY_ID, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<City> fetchRangeOfLastUpdate_(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(City_.CITY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<City> fetchByLastUpdate_(LocalDateTime... values) {
        return fetch(City_.CITY.LAST_UPDATE, values);
    }
}
