/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Address_;
import org.jooq.generated.tables.pojos.Address;
import org.jooq.generated.tables.records.AddressRecord;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressDao extends DAOImpl<AddressRecord, Address, Long> {

    /**
     * Create a new AddressDao without any configuration
     */
    public AddressDao() {
        super(Address_.ADDRESS, Address.class);
    }

    /**
     * Create a new AddressDao with an attached configuration
     */
    public AddressDao(Configuration configuration) {
        super(Address_.ADDRESS, Address.class, configuration);
    }

    @Override
    public Long getId(Address object) {
        return object.getAddressId();
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfAddressId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Address_.ADDRESS.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<Address> fetchByAddressId_(Long... values) {
        return fetch(Address_.ADDRESS.ADDRESS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>address_id = value</code>
     */
    public Address fetchOneByAddressId_(Long value) {
        return fetchOne(Address_.ADDRESS.ADDRESS_ID, value);
    }

    /**
     * Fetch a unique record that has <code>address_id = value</code>
     */
    public Optional<Address> fetchOptionalByAddressId_(Long value) {
        return fetchOptional(Address_.ADDRESS.ADDRESS_ID, value);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfAddress_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address_.ADDRESS.ADDRESS_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<Address> fetchByAddress_(String... values) {
        return fetch(Address_.ADDRESS.ADDRESS_, values);
    }

    /**
     * Fetch records that have <code>address2 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfAddress2_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address_.ADDRESS.ADDRESS2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address2 IN (values)</code>
     */
    public List<Address> fetchByAddress2_(String... values) {
        return fetch(Address_.ADDRESS.ADDRESS2, values);
    }

    /**
     * Fetch records that have <code>district BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfDistrict_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address_.ADDRESS.DISTRICT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>district IN (values)</code>
     */
    public List<Address> fetchByDistrict_(String... values) {
        return fetch(Address_.ADDRESS.DISTRICT, values);
    }

    /**
     * Fetch records that have <code>city_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfCityId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Address_.ADDRESS.CITY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city_id IN (values)</code>
     */
    public List<Address> fetchByCityId_(Long... values) {
        return fetch(Address_.ADDRESS.CITY_ID, values);
    }

    /**
     * Fetch records that have <code>postal_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfPostalCode_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address_.ADDRESS.POSTAL_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    public List<Address> fetchByPostalCode_(String... values) {
        return fetch(Address_.ADDRESS.POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfPhone_(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address_.ADDRESS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<Address> fetchByPhone_(String... values) {
        return fetch(Address_.ADDRESS.PHONE, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Address> fetchRangeOfLastUpdate_(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Address_.ADDRESS.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<Address> fetchByLastUpdate_(LocalDateTime... values) {
        return fetch(Address_.ADDRESS.LAST_UPDATE, values);
    }
}
