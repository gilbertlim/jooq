/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.generated.tables.Inventory_;
import org.jooq.generated.tables.pojos.Inventory;
import org.jooq.generated.tables.records.InventoryRecord;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryDao extends DAOImpl<InventoryRecord, Inventory, Long> {

    /**
     * Create a new InventoryDao without any configuration
     */
    public InventoryDao() {
        super(Inventory_.INVENTORY, Inventory.class);
    }

    /**
     * Create a new InventoryDao with an attached configuration
     */
    public InventoryDao(Configuration configuration) {
        super(Inventory_.INVENTORY, Inventory.class, configuration);
    }

    @Override
    public Long getId(Inventory object) {
        return object.getInventoryId();
    }

    /**
     * Fetch records that have <code>inventory_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Inventory> fetchRangeOfInventoryId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Inventory_.INVENTORY.INVENTORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inventory_id IN (values)</code>
     */
    public List<Inventory> fetchByInventoryId_(Long... values) {
        return fetch(Inventory_.INVENTORY.INVENTORY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>inventory_id = value</code>
     */
    public Inventory fetchOneByInventoryId_(Long value) {
        return fetchOne(Inventory_.INVENTORY.INVENTORY_ID, value);
    }

    /**
     * Fetch a unique record that has <code>inventory_id = value</code>
     */
    public Optional<Inventory> fetchOptionalByInventoryId_(Long value) {
        return fetchOptional(Inventory_.INVENTORY.INVENTORY_ID, value);
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Inventory> fetchRangeOfFilmId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Inventory_.INVENTORY.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<Inventory> fetchByFilmId_(Long... values) {
        return fetch(Inventory_.INVENTORY.FILM_ID, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Inventory> fetchRangeOfStoreId_(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Inventory_.INVENTORY.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<Inventory> fetchByStoreId_(Long... values) {
        return fetch(Inventory_.INVENTORY.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Inventory> fetchRangeOfLastUpdate_(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Inventory_.INVENTORY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<Inventory> fetchByLastUpdate_(LocalDateTime... values) {
        return fetch(Inventory_.INVENTORY.LAST_UPDATE, values);
    }
}
